<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.ex01.mapper.ItemMapper">
	
	<select id="getList" resultType="com.example.ex01.dto.ItemDto">
		<![CDATA[
            select /*+ index_asc(item SYS_C007008) */
            ino, category, name, price, amount, discount, content
			from (
				select 
					/*+ index_asc(item SYS_C007008) */
					rownum rn, ino, category, name, price, amount, discount, content
					from item
					where 1 = 1
					and ino > 0
					
        ]]>
        
        <include refid="search"></include>
        
        <![CDATA[
            and rownum <= #{pageNum} * #{amount}
			
				)
			where 1 = 1
			and rn > (#{pageNum} - 1) * #{amount}
        ]]>
	</select>
	
	<select id="get" resultType="com.example.ex01.dto.ItemDto">
	    <![CDATA[
            select ino, category, name, price, amount, discount, content
            from item
            where 1 = 1 
            and ino = #{ino}
        ]]>
    </select>
	
	<select id="getCount" resultType="int" >
	    <![CDATA[
            select count(*)
            from item
            where 1 = 1 
            and ino > 0
        ]]>
        
        <include refid="search"></include>
    </select>
    
    <update id="update">
    	<![CDATA[
         	update item set
			name = ${name},
			price = #{price},
			category = #{category},
			amount = #{amount},
			discount = #{discount},
			content = #{content}
			where 1 = 1
			and ino = #{ino}
        ]]>
	</update>

	<delete id="delete">
		<![CDATA[
			delete from item
			where 1 = 1
			and ino = #{ino}
		]]>
	</delete>
    
    <insert id="insert">
		<selectKey keyProperty="ino" order="BEFORE" resultType="Long">
			select nvl(max(ino), 0) + 1 from item
		</selectKey>
	
		<![CDATA[
			insert into item(ino, category, name, price, discount, content) 
			values(#{ino}, #{category}, #{name}, #{price}, #{discount}, #{content})
        ]]>
	</insert>
    
    
    <sql id="search">
    	<choose>
    		<when test='keyword == null or keyword.equals("")'>
    			
    		</when>
    		<when test='type == null or type.equals("")'>
    			
    		</when>
    		<!-- <when test="type == 'F' or type.equals('F')">
    			and caregory like '%'||#{keyword}||'%'
    		</when> -->
    		<otherwise>
    			<!-- and ${type} like '%'||#{keyword}||'%' -->
    			and name like '%'||#{keyword}||'%'
    		</otherwise>
    	</choose>
    </sql>
 
</mapper>